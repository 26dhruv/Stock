herrick 


sti = tax.supertrend(df['High'], df['Low'], df['Close'],
                     length=10, multiplier=1.0)
df_list = [df, sti]

f = pd.concat([d.iloc[:, :-1] for d in df_list], axis=1)





fastk_period=5,
                                                     slowk_period=3, slowk_matype=0, slowd_period=3, slowd_matype=0


                                                     df['Stoch_%K'], df['Stoch_%D'] = talib.STOCH(df['h'], df['l'], df['c']
inproper value
adx


proper value 
wvap'
wma     
cci
william_r
STOCHastic
KST
hull
adx
macd



adx



df['MACD'], df['MACD_sig'], df['MACD_hist'] = talib.MACDFIX(df['c'])




 df['BOP'] = tax.bop(df['o'], df['h'], df['l'], df['c'])
        df['EMA_10'] = tax.ema(df['c'], length=10)
        df['EMA_11'] = tax.ema(df['c'], length=11)
        df['EMA_20'] = tax.ema(df['c'], length=20)
        df['EMA_30'] = tax.ema(df['c'], length=30)

        df['EMA_50'] = tax.ema(df['c'], length=50)
        df['EMA_200'] = tax.ema(df['c'], length=200)

        df['HMA'] = tax.hma(df['c'], length=9)
        df['VWAP'] = ta.volume.VolumeWeightedAveragePrice(
            df['h'], df['l'], df['c'], df['v']).volume_weighted_average_price()
        df['Aroon_down'] = ta.trend.AroonIndicator(
            df['c'], window=14).aroon_down()
        df['aroon_up'] = ta.trend.AroonIndicator(
            df['c'], window=14).aroon_up()
        df['PSAR'] = ta.trend.PSARIndicator(df['h'], df['l'], df['c']).psar()
        df['TEMA'] = talib.TEMA(df['c'])

        df['OBV'] = tax.obv(df['c'], df['v'])

        df['MFI'] = ta.volume.MFIIndicator(
            df['h'], df['l'], df['c'], df['v']).money_flow_index()
        df['ChakinMoneyFlowIndicator'] = ta.volume.ChaikinMoneyFlowIndicator(
            df['h'], df['l'], df['c'], df['v']).chaikin_money_flow()
        df['WMA'] = ta.trend.WMAIndicator(df['c']).wma()
        df['normalized ATR'] = talib.NATR(
            df['h'], df['l'], df['c'])
        df['Bollinger Band upper band value'] = ta.volatility.BollingerBands(
            df['c']).bollinger_hband()
        df['Bollinger Band lower band value'] = ta.volatility.BollingerBands(
            df['c']).bollinger_lband()
        kc = tax.kc(df['h'], df['l'], df['c'])
        eri = tax.eri(
            df['h'], df['l'], df['c'])
        sti = tax.supertrend(df['h'], df['l'], df['c'])
        df_list = [df, sti, eri, x, kc]
        f = pd.concat([d.iloc[:, :-1] for d in df_list], axis=1)

        def hpi(df):
            prev_close = df['c'].iloc[-2:-1]

            prev_open = df['o'].iloc[-2:-1]
            prev_high = df['h'].iloc[-2:-1]
            prev_low = df['l'].iloc[-2:-1]
            medain = (df['h']+df['l'])/2

        def PPSR(df):
            df['PP'] = pd.Series((df['h'] + df['l'] + df['c']) / 3)
            df['R1'] = pd.Series(2 * df['PP'] - df['l'])
            df['S1'] = pd.Series(2 * df['PP'] - df['h'])
            df['R2'] = pd.Series(df['PP'] + df['h'] - df['l'])
            df['S2'] = pd.Series(df['PP'] - df['h'] + df['l'])
            df['R3'] = pd.Series(df['h'] + 2 * (df['PP'] - df['l']))
            df['S3'] = pd.Series(df['l'] - 2 * (df['h'] - df['PP']))

            return df
        PPSR(f)
        f['R-slope'] = talib.LINEARREG_SLOPE(df['c'])
        f['mom'] = tax.mom(df['c'])

        print()
        f.to_excel(f"{symobl}--{barsize}.xlsx")
        del df
